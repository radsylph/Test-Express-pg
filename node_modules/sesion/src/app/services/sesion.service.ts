import { Injectable } from '@angular/core';
import { Http, Response, RequestOptions, URLSearchParams, Headers } from '@angular/http';
import { ConfigService } from './config.service';
import {catchError, map} from 'rxjs/operators';
import { Observable } from 'rxjs';
import { NotificationsService } from 'angular2-notifications';
import { Router } from '@angular/router';

@Injectable()
export class SesionService {
  token: string;
  res : any = [];

  constructor(private _configService: ConfigService, private http: Http, private notificationsService : NotificationsService, private router : Router) {
    this.token =  localStorage.getItem('TOKEN');
  }

  validarSession(){
    this.queryValidarSession().subscribe(result => {
      this.res = result;
      if(this.res.rolId === -1){
        window.location.assign(this._configService.routeTestingLogin);
      }
    }, error => {
      this.notificationsService.error('Error.', 'Error al llamado servicio de validar token.');
    });
  }

  queryValidarSession() : Observable<any[]>{
    let url = this._configService.hostSeguridad + 'Token_obtenerUsuario';
    const headers = new Headers({ 'Content-Type': 'application/json', 'token': this.token});
    const options = new RequestOptions({ headers: headers });
    const params: URLSearchParams = new URLSearchParams();
    options.search = params;

    let body = {token: this.token};
    let bodyString = JSON.stringify(body);

    return this.http.post(url, bodyString, options)
      .pipe(map(this._configService.obtenerDatos),
        catchError(this._configService.getWebServiceError));
  }

}
