import { Injectable } from '@angular/core';
import {ConfigService} from './config.service';
import {catchError, map} from 'rxjs/operators';
import {Observable } from 'rxjs';
import {Headers, Response, Http, RequestOptions, URLSearchParams} from '@angular/http';
import {Router} from '@angular/router';

@Injectable()
export class PermisosService {

  token: string;
  listPermisosPaginas: any = [];

  constructor(private _configService: ConfigService, private http: Http, private router : Router) {
    this.token = localStorage.getItem('TOKEN');
  }

  public listarPermisosPorUsuario(): Observable<any[]> {
    const headers = new Headers({'Content-Type': 'application/json'});
    headers.append('token', this.token);
    const options = new RequestOptions({headers: headers});
    const params: URLSearchParams = new URLSearchParams();

    options.search = params;

    return this.http.get(this._configService.getHost() + '/ProyectoReintegros/webresources/permisos/porusuario', options)
      .pipe(map(this._configService.obtenerDatos),
      catchError(this._configService.getWebServiceError));
  }

  paginaPermisos(idPagina) {
    this.listarPermisosPorUsuario().subscribe(result => {
      this.listPermisosPaginas = result;
      if(this.listPermisosPaginas !== null && this.listPermisosPaginas !== undefined) {
        if(!this.listPermisosPaginas.some(p => p.id === idPagina)){
          localStorage.setItem('TOKEN', '');
          window.location.assign(this._configService.routeTestingLogin);
        }
      }
    }, error => {
      console.log('Error al leer permisos de usuario');
    });
  }

}
